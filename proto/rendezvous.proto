syntax = "proto3";

import "net.proto";

package sonm;

service Rendezvous {
    rpc Resolve(ConnectRequest) returns (ConnectReply) {}
    // Publish allows to publish the caller server's endpoints.
    //
    // While published the server can be located using the ID extracted from
    // the transport credentials.
    rpc Publish(PublishRequest) returns (PublishReply) {}

//    rpc Info()
//    rpc Peers() ->
}

// ConnectRequest describres a connection request to a remote target, possibly
// located under the NAT.
message ConnectRequest {
    // ID describes an unique ID of a target. Mainly it's an ETH address.
    string ID = 1;
    // Protocol describes network protocol the peer wants to resolve.
    string protocol = 2;
    // PrivateAddrs describes source privare addresses.
    repeated Addr privateAddrs = 3;
}

// ConnectReply describes a connection reply.
message ConnectReply {
    // PublicAddr is a public network address of a target.
    Addr publicAddr = 1;
    // PrivateAddrs describes private network addresses of a target.
    //
    // These addresses should be used to perform an initial connection
    // attempt for cases where both peers are located under the same NAT.
    repeated Addr privateAddrs = 2;
}

message PublishRequest {
    // PrivateAddrs describes source privare addresses.
    repeated Addr privateAddrs = 1;
}

message PublishReply {
    // Protocol describes network protocol the other peer wants to resolve.
    string protocol = 1;
    // PublicAddr is a public network address of a target.
    Addr publicAddr = 2;
    // PrivateAddrs describes private network addresses of a target.
    //
    // These addresses should be used to perform an initial connection
    // attempt for cases where both peers are located under the same NAT.
    repeated Addr privateAddrs = 3;
}
